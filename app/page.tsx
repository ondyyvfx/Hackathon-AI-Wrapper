'use client';

import { useState } from 'react';

export default function Home() {
  const [answers, setAnswers] = useState<AnswersType>({
    role: '',
    power: '',
    universe: '',
    personality: '',
    gender: '',
  });
  

  const [hero, setHero] = useState('');
  const [img, setImg] = useState('');
  const [loading, setLoading] = useState(false);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setAnswers(prev => ({ ...prev, [name]: value }));
  };

  type AnswersType = {
    role: string;
    power: string;
    universe: string;
    personality: string;
    gender: string;
  };

  type Hero = {
    id: string; // —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    name: string;
    description: string;
    imageUrl: string;
  };
  

  const generatePrompt = (answers: AnswersType) => {
    return `
  –¢—ã ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –ø–∏—Å–∞—Ç–µ–ª—å –∫–æ–º–∏–∫—Å–æ–≤. –ù–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∏–∂–µ –ø—Ä–∏–¥—É–º–∞–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Å—É–ø–µ—Ä–≥–µ—Ä–æ—è, —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å —Ç–µ–º–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —à–∞–±–ª–æ–Ω–Ω—ã–µ –∏–ª–∏ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —Å–∏–ª—ã.
  
  1. üî• –¢–µ–º–∞ –≥–µ—Ä–æ—è: ${answers.role} (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî "—á—Ç–æ-—Ç–æ –ø—Ä–∏–∫–æ–ª—å–Ω–æ–µ —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é")
  2. üåç –í—Å–µ–ª–µ–Ω–Ω–∞—è: ${answers.universe}
  3. üß† –•–∞—Ä–∞–∫—Ç–µ—Ä: ${answers.personality}
  4. ‚öß –ì–µ–Ω–¥–µ—Ä: ${answers.gender}
  
  üéØ –û–ø–∏—à–∏:
  - –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –≥–µ—Ä–æ—è (–Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π Marvel –∏–ª–∏ DC)
  - –ï–≥–æ —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∏–º–µ–Ω–Ω–æ —Å —Ç–µ–º–æ–π "—Å–∫–æ—Ä–æ—Å—Ç–∏"
  - –ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é (–∫–∞–∫ –æ–Ω –ø–æ–ª—É—á–∏–ª —Å–≤–æ–∏ —Å–∏–ª—ã, –∫–∞–∫–∏–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è –ø—Ä–æ—à—ë–ª)
  - –ï–≥–æ –∫–æ—Å—Ç—é–º –∏ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥
  - –° –∫–∞–∫–∏–º –∑–ª–æ–º –æ–Ω –±–æ—Ä–µ—Ç—Å—è
  
  –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
  –ò–º—è:
  –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏:
  –ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è:
  –ö–æ—Å—Ç—é–º:
  –í–Ω–µ—à–Ω–∏–π –≤–∏–¥:
  –ú–∏—Å—Å–∏—è:
  
  –û—Ç–≤–µ—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
  `;
  };
  
  

  const generateHero = async () => {
    setLoading(true);
    setHero('');
    setImg('');

    const prompt = generatePrompt(answers);

    const res = await fetch('/api/generate', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ prompt }),
    });

    const data = await res.json();
    setHero(data.text);
    setImg(data.imageUrl);
    setLoading(false);
  };

   const [collection, setCollection] = useState<Hero[]>([]);

  const saveHeroToCollection = () => {
    const currentCollection = JSON.parse(localStorage.getItem('heroCollection') || '[]');
    const newHero = {
      name: hero,
      image: img,
      date: new Date().toISOString(),
    };

    const updated = [...currentCollection, newHero];
    localStorage.setItem('heroCollection', JSON.stringify(updated));
    setCollection(updated); // —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ä–∞–∑—É
  };
  

  return (
    <section id='generate'>
      <main className="bg-gradient-to-b from-gray-900 to-black min-h-screen text-white flex flex-col items-center justify-center gap-6 p-4">
        <h1 className="text-3xl font-bold">‚ö° –°—Ç–∞–Ω—å –∞–≤—Ç–æ—Ä–æ–º —Å–≤–æ–µ–≥–æ —Å—É–ø–µ—Ä–≥–µ—Ä–æ—è</h1>

        <div className="flex flex-col gap-4 max-w-md w-full">
        <input
        type="text"
        placeholder="–ì–µ—Ä–æ–π –∏–ª–∏ –∑–ª–æ–¥–µ–π?"
        className="bg-white/10 backdrop-blur-md placeholder-white/70 text-white border border-white/30 rounded-md px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
          <input name="power" placeholder="–ö–∞–∫–∞—è —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å?" onChange={handleChange} className="bg-white/10 backdrop-blur-md placeholder-white/70 text-white border border-white/30 rounded-md px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500" />
          <select name="universe" onChange={handleChange} className="bg-white/10 backdrop-blur-md text-white border border-white/30 rounded-md px-4 py-2 w-full mt-4">
            <option className="bg-gray-900 text-white" value="">–í—ã–±–µ—Ä–∏ –≤—Å–µ–ª–µ–Ω–Ω—É—é</option>
            <option className="bg-gray-900 text-white" value="Marvel">Marvel</option>
            <option className="bg-gray-900 text-white" value="DC">DC</option>
            <option className="bg-gray-900 text-white" value="–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è">–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è</option>
          </select>
          <input name="personality" placeholder="–û–ø–∏—à–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –≥–µ—Ä–æ—è" onChange={handleChange} className="bg-white/10 backdrop-blur-md placeholder-white/70 text-white border border-white/30 rounded-md px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500" />
          <input name="gender" placeholder="–ü–æ–ª –≥–µ—Ä–æ—è" onChange={handleChange} className="bg-white/10 backdrop-blur-md placeholder-white/70 text-white border border-white/30 rounded-md px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500" />
        </div>

        <button
          onClick={generateHero}
          className="bg-blue-600 px-6 py-2 rounded-xl hover:bg-blue-700 transition"
        >
          {loading ? '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è...' : '–°–æ–∑–¥–∞—Ç—å –≥–µ—Ä–æ—è'}
        </button>

        {img && <img src={img} alt="Hero" className="w-64 h-64 rounded-xl" />}
        {hero && <pre className="max-w-xl whitespace-pre-wrap text-left">{hero}</pre>}

        {hero && (
          <button
            onClick={saveHeroToCollection}
            className="bg-green-600 px-4 py-2 rounded-xl hover:bg-green-700 transition"
          >
            üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≥–µ—Ä–æ—è
          </button>
        )}
      </main>
    </section>
  );
}
